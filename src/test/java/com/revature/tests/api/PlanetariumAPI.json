{
	"info": {
		"_postman_id": "6782be7b-1feb-4734-ba4b-f40893bfe3bf",
		"name": "Planetarium",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "40761138"
	},
	"item": [
		{
			"name": "Login",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"Batman\",\r\n    \"password\": \"Iamthenight1939\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://54.196.136.154:8081/login?username&password",
					"protocol": "http",
					"host": [
						"54",
						"196",
						"136",
						"154"
					],
					"port": "8081",
					"path": [
						"login"
					],
					"query": [
						{
							"key": "username",
							"value": null
						},
						{
							"key": "password",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Planets By Owner ID Positive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 with valid owner id\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Each planet has planetId, planetName, ownerId, and imageData\", function () {\r",
							"    let jsonData = pm.response.json();\r",
							"    jsonData.forEach(planet => {\r",
							"        pm.expect(planet).to.have.property('planetId');\r",
							"        pm.expect(planet).to.have.property('planetName');\r",
							"        pm.expect(planet).to.have.property('ownerId');\r",
							"        pm.expect(planet).to.have.property('imageData');\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet/owner/1"
			},
			"response": []
		},
		{
			"name": "Get Planets By Owner ID Negative",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Retrieve the ownerId from the data file\r",
							"pm.globals.get(\"variable_key\");\r",
							"let ownerId = pm.iterationData.get(\"ownerId\");\r",
							"\r",
							"// Check if ownerId is 1\r",
							"if (Number(ownerId) === 1) {\r",
							"    pm.test(\"Status code is 200 with valid owner id\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    pm.test(\"Each planet has planetId, planetName, ownerId, and imageData\", function () {\r",
							"        let jsonData = pm.response.json();\r",
							"        jsonData.forEach(planet => {\r",
							"            pm.expect(planet).to.have.property('planetId');\r",
							"            pm.expect(planet).to.have.property('planetName');\r",
							"            pm.expect(planet).to.have.property('ownerId');\r",
							"            pm.expect(planet).to.have.property('imageData');\r",
							"        });\r",
							"    });\r",
							"}\r",
							"\r",
							"// Check if ownerId is 0\r",
							"if (Number(ownerId) === 0) {\r",
							"    pm.test(\"Status code is 200 with empty list\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"\r",
							"        // Verify the response is an empty array\r",
							"        let jsonData = pm.response.json();\r",
							"        pm.expect(jsonData).to.be.an('array').that.is.empty;\r",
							"    });\r",
							"}\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet/owner/0"
			},
			"response": []
		},
		{
			"name": "Get moons by valid planet id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body should contain moon details\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"moonId\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://54.196.136.154:8081/planetarium/moon/owner/1"
			},
			"response": []
		},
		{
			"name": "Get moons by invalid planet id not existing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response body should not contain moon details\", function () {\r",
							"    pm.expect(pm.response.text()).to.not.include(\"moonId\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": "http://54.196.136.154:8081/planetarium/moon/owner/99"
			},
			"response": []
		},
		{
			"name": "Create Planet Positive null File Type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 (planet added to database) for file type: null\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"eternal atake\",\r\n    \"ownerId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Positive jpg File Type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 (planet added to database) for file type: jpg\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"eternal atake1\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"/9j/4AAQSkZJRgABAQEASABIAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/wAALCAABAAEBAREA/8QAFAABAAAAAAAAAAAAAAAAAAAACf/EABQQAQAAAAAAAAAAAAAAAAAAAAD/2gAIAQEAAD8AKp//2Q==\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Positive png File Type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let planetName = pm.iterationData.get(\"planetName\");\r",
							"let ownerId = pm.iterationData.get(\"ownerId\");\r",
							"let imageData = pm.iterationData.get(\"imageData\");\r",
							"\r",
							"// Build the JSON object in JavaScript\r",
							"let body = {\r",
							"  planetName: planetName,\r",
							"  ownerId: Number(ownerId)\r",
							"};\r",
							"\r",
							"// Conditionally add imageData\r",
							"if (imageData) {\r",
							"  body.imageData = imageData;\r",
							"}\r",
							"\r",
							"// Stringify and save to a Postman variable\r",
							"pm.variables.set(\"requestBody\", JSON.stringify(body));\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 (planet added to database) for file type: png\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"eternal atake2\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"iVBORw0KGgoAAAANSUhEUgAAAAgAAAAIAQMAAAD+wSzIAAAABlBMVEX///+/v7+jQ3Y5AAAADklEQVQI12P4AIX8EAgALgAD/aNpbtEAAAAASUVORK5CYII\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400 and expected error message: Invalid planet name for planet name thisisthirtylettersthatsinvalid\", function () {\r",
							"    pm.response.to.have.status(400);    \r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for planet name thisisthirtylettersthatsinvalid\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"thisisthirtylettersthatsinvalid\",\r\n    \"ownerId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for no planet name\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"\",\r\n    \"ownerId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for planet !\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"!\",\r\n    \"ownerId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for planet Earth\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"Earth\",\r\n    \"ownerId\": \"1\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for planet name thisisthirtylettersthatsinvalid with invalid file type\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"thisisthirtylettersthatsinvalid\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for no planet name with invalid file type\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid file type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);    \r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for planet ? with invalid file type\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid file type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"?\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid Planet Name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for planet Earth with invalid file type\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid file type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"Earth\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "Create Planet Negative Invalid File Type",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code: 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Expected error message: Invalid planet name for unique planet with invalid file type\", function () {    \r",
							"    pm.response.to.have.body(\"Invalid file type\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"planetName\": \"eternalatake3\",\r\n    \"ownerId\": \"1\",\r\n    \"imageData\": \"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/planet"
			},
			"response": []
		},
		{
			"name": "CreateMoonSccuess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 201\", function()\r",
							"{\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"APIMoon\",\r\n    \"ownerId\": 1,\r\n    \"imageData\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "AddMoonWithImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 201\", function()\r",
							"{\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"APIMoonWithImage\",\r\n    \"ownerId\": 1,\r\n    \"imageData\": \"C:\\\\Users\\\\William\\\\Documents\\\\GitHub\\\\PlanetariumTesting\\\\Cucmber\\\\src\\\\test\\\\resources\\\\Celestial-Images\\\\moons-3.jpg\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "UnallowedCharactersInName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 400\", function()\r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"APIMoon!\",\r\n    \"ownerId\": 1,\r\n    \"imageData\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "TooManyCharcters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 400\", function()\r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"APIMoonwithfartoomanycharactersinthename\",\r\n    \"onwerId\": 1,\r\n    \"imageData\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "NonUniqueName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 400\", function()\r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"Titan\",\r\n    \"onwerID\": 1,\r\n    \"imageData\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "InvalidPlanetId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 400\", function()\r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"APIWrongId\",\r\n    \"ownerId\": 0,\r\n    \"imageData\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "InvalidPhotoType",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 400\", function()\r",
							"{\r",
							"    pm.response.to.have.status(400);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"moonName\": \"APIMoonWithImage\",\r\n    \"ownerId\": 1,\r\n    \"imageData\": \"C:\\\\Users\\\\William\\\\Documents\\\\GitHub\\\\PlanetariumTesting\\\\Cucmber\\\\src\\\\test\\\\resources\\\\Celestial-Images\\\\Testwebp.webp\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon"
			},
			"response": []
		},
		{
			"name": "Delete valid planet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function(){\r",
							"    pm.response.to.have.status(204);\r",
							"    });\r",
							"\r",
							"\r",
							"pm.test(\"Message: Planet deleted successfully\", function () {\r",
							"    pm.response.to.have.body(\"Planet deleted successfully\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://54.196.136.154:8081/planetarium/planet/Earth"
			},
			"response": []
		},
		{
			"name": "Delete invalid planet owned by other user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function(){\r",
							"        pm.response.to.have.status(404);\r",
							"    });\r",
							"\r",
							"pm.test(\"Message: Invalid planet name\", function () {\r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://54.196.136.154:8081/planetarium/planet/Pluto"
			},
			"response": []
		},
		{
			"name": "Delete invalid planet not existing planet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function(){\r",
							"        pm.response.to.have.status(404);\r",
							"    });\r",
							"\r",
							"pm.test(\"Message: Invalid planet name\", function () {\r",
							"    pm.response.to.have.body(\"Invalid planet name\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "http://54.196.136.154:8081/planetarium/planet/Neptune"
			},
			"response": []
		},
		{
			"name": "DeleteMoonSccuess",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 200\", function()\r",
							"{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://54.196.136.154:8081/planetarium/moon/Titan",
					"protocol": "http",
					"host": [
						"54",
						"196",
						"136",
						"154"
					],
					"port": "8081",
					"path": [
						"planetarium",
						"moon",
						"Titan"
					],
					"query": [
						{
							"key": "",
							"value": null,
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteMoonFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status Code is 404\", function()\r",
							"{\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://54.196.136.154:8081/planetarium/moon/Equnoix"
			},
			"response": []
		}
	]
}